[
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 20-20-07_output_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 20-26-18_output_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 20-41-30_output_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 21-13-21_output_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 21-15-19_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 21-15-20_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 21-40-44_output_final_subtitled_merged.mp4"
    },
    {
        "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/9/videos/final/shorts/subtitles/subscribe/2025-07-03 21-44-06_output_final_subtitled_merged.mp4"
    }
]


[
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/intro_init.mp4",
    "title": "⚙️ What is init() in Go? | Master Package Initialization!",
    "description": "📌 In this GoLang interview short:\n\n✅ Learn what `init()` does in Go\n✅ Why it runs *before* `main()`\n✅ Common use cases like config setup & resource allocation\n\n#golang #interviewprep #gointerview #golanginit #programmingtips #godev #shorts",
    "tags": ["golang", "go interview", "init function", "golang tips", "package initialization", "godev", "go programming", "golang short"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/intro_init.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-07 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/init_execution_order.mp4",
    "title": "⏱️ When Does init() Run in Go? | Golang Short",
    "description": "🚀 Understand the execution flow in Go:\n\n🔹 init() runs after var declarations\n🔹 Before `main()`\n🔹 Order: Imported packages → Current init → Main\n\nPerfect for interviews! 💡\n\n#golang #initfunction #goexecution #techshorts #interviewquestion #golanginterview",
    "tags": ["golang", "init execution", "go interview", "init function", "golang runtime", "godev", "golang short"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/init_execution_order.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-08 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/init_example_code.mp4",
    "title": "👨‍💻 Go init() Function Example | Must-Know Syntax!",
    "description": "🔧 GoLang developers! Here's a simple `init()` example:\n\n📦 Setup logic before `main()`\n💡 Useful for config & pre-processing\n📌 Shown with clean, beginner-friendly code\n\n#golang #codeexample #initfunction #goexample #gointerviewprep #techshorts",
    "tags": ["golang", "go init example", "go code", "init syntax", "go interview question", "godev", "golang short"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/init_example_code.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-09 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/multiple_init.mp4",
    "title": "📚 Can You Have Multiple init() Functions in Go?",
    "description": "🤯 Yes, Go allows **multiple `init()` functions** per file!\n\n✅ They're executed in order of appearance\n✅ Useful in large codebases\n✅ Handy in package-level setups\n\n#golang #goinit #gointerview #multipleshort #codingfacts #devshorts",
    "tags": ["golang", "init function", "multiple init", "go interview", "go trivia", "godev", "golang short"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/multiple_init.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-10 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/init_vs_main.mp4",
    "title": "⚔️ init() vs main() in Go | Know the Difference!",
    "description": "📌 init() vs main(): What's the difference?\n\n🟢 `init()` – Auto-called by Go runtime, used for setup\n🔵 `main()` – Program entry point\n🔍 Great for interview prep & code clarity\n\n#golang #initvsmain #gointerview #devshorts #goprogramming #shorts",
    "tags": ["golang", "init vs main", "go function order", "go interview", "godev", "golang short", "go runtime"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/init_vs_main.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-11 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/init_use_cases.mp4",
    "title": "🛠️ Real-World Uses of init() in Go!",
    "description": "🔍 init() is not just for show!\n\n✅ Load config files\n✅ Set defaults\n✅ Register plugins\n✅ Validate environment variables\n\n🎯 Know when & how to use it effectively!\n\n#golang #initfunction #gointerview #gopractical #devshorts #godev #goinsights",
    "tags": ["golang", "init use cases", "go interview", "golang dev", "init real world", "godev", "golang short"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/init_use_cases.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-12 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  },
  {
    "videoFile": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/init_best_practices.mp4",
    "title": "✅ Best Practices for init() in Go | Avoid These Mistakes!",
    "description": "⚠️ Stop misusing `init()` in Go!\n\n💡 Keep it minimal\n💡 Avoid business logic\n💡 Prefer `main()` for core setup\n📚 Follow clean code principles\n\n#golang #gobestpractices #initfunction #interviewprep #golangshort #cleancode",
    "tags": ["golang", "init best practices", "go interview", "golang short", "godev", "clean code"],
    "categoryName": "Education",
    "privacyStatus": "public",
    "thumbnail": "C:/Users/dhruv/Videos/2025/golang_interview_questions/init/thumbnails/init_best_practices.png",
    "playlistName": "Go Interview Questions",
    "publishAt": "2025-07-13 12:00:00",
    "madeForKids": false,
    "ageRestriction": false
  }
]




I have two JSON inputs:

json1 – A list of objects, each containing a "videoFile" path.

json2 – A list of video metadata objects under the "videos" key. Each object has keys like "videoFile", "title", "description", "tags", "publishAt", etc.

🔄 Task:

Replace only the "videoFile" values in json2["videos"] with those from json1, in order.

Keep all other fields like title, description, tags, etc., unchanged.

🗓️ Additional Requirement:

Ask me for a starting date in format YYYY-MM-DD and playlist name.

Starting from that date, update the "publishAt" field for each video to be one per day, using fixed time 12:00:00.

Example: If I enter 2025-07-06, then:

First video → "publishAt": "2025-07-06 12:00:00"

Second video → "publishAt": "2025-07-07 12:00:00"

Third video → "publishAt": "2025-07-08 12:00:00"

…and so on.

⚠️ Rules:

If json1 has fewer items than json2["videos"], only replace what's available.

If json1 has more items, ignore the extra ones.

✅ Output:
Return the updated json2 JSON object with:

Replaced "videoFile" values

Updated "publishAt" values starting from the input date

All other properties preserved as-is
